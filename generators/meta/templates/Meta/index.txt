import { Request } from 'express'
import * as <%= name %>Service from '<%= path %>./service'
import { <%= name %>Model } from '<%= path %>./model'
import { CustomResponse } from '<%= path %>../../config/middleware/responseResult'

export async function create(req: Request, res: CustomResponse): Promise<void> {
  try {
    const <%= name %>: <%= name %>Model = await <%= name %>Service.create(req.body)

    res.result.success(<%= name %>)
  } catch (e) {
    res.result.error(e.message)
  }
}
export async function find(req: Request, res: CustomResponse): Promise<void> {
  try {
    const [<%= name %>List, pageData] = await <%= name %>Service.find(req.query)

    res.result.success({ ...pageData, list: <%= name %>List })
  } catch (e) {
    res.result.error(e.message)
  }
}

export async function findById(
  req: Request,
  res: CustomResponse
): Promise<void> {
  try {
    const <%= name %> = await <%= name %>Service.findById(req.query._id as string)
    res.result.success(<%= name %>)
  } catch (e) {
    res.result.error(e.message)
  }
}

export async function update(req: Request, res: CustomResponse): Promise<void> {
  try {
    const <%= name %> = await <%= name %>Service.update(req.body)
    res.result.success(<%= name %>)
  } catch (e) {
    res.result.error(e.message)
  }
}

export async function remove(req: Request, res: CustomResponse): Promise<void> {
  try {
    const <%= name %> = await <%= name %>Service.remove(req.body)
    res.result.success(<%= name %>)
  } catch (e) {
    res.result.error(e.message)
  }
}
